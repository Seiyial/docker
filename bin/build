#!/usr/bin/env bash
set -e

function call() {
  $(dirname $0)/$1 ${@:2}
}

# NOTE: Remove images
# docker image rm --force $(docker images --format "{{.Repository}}:{{.Tag}}" | grep directus)

if [ "${SANDBOX}" == "true" ]; then
  echo "Running in dev sandbox"
  if ! [ -d ".git" ]; then
    echo -e "\e[31mFailed to read git repository. Sandbox should be used inside a git repository.\e[0m"
    exit 1
  fi

  export TRAVIS_BRANCH=$(git branch | grep \* | cut -d ' ' -f2)
  if [ "${TRAVIS_TAG}" == "" ]; then
    set +e
    git describe --exact-match --tags > /tmp/tag 2>&1
    if [ "$?" != "0" ]; then
      echo -e "\e[31mFailed to fetch tag information from git repository. Set TRAVIS_TAG or checkout a tag.\e[0m"
      exit 1
    fi
    set -e
    export TRAVIS_TAG=$(cat /tmp/tag)
    semver get major ${TRAVIS_TAG} > /dev/null 2>&1
    if [ "$?" != "0" ]; then
      echo -e "\e[31mFailed to parse SEMVER from string "${TRAVIS_TAG}"\e[0m"
      exit 1
    fi
  fi
fi

echo ""
echo "Building images..."
echo ""
echo "> TRAVIS_TAG = \"${TRAVIS_TAG}\""
echo "> TRAVIS_BRANCH = \"${TRAVIS_BRANCH}\""
echo ""

export VERSION_PUSH="false"
export VERSION_MAJOR="${TRAVIS_BRANCH}"
export VERSION_MINOR="${TRAVIS_BRANCH}"
export VERSION_PATCH="${TRAVIS_BRANCH}"
export VERSION_PRE="${TRAVIS_BRANCH}"
export VERSION="${TRAVIS_BRANCH}"

if [ "${TRAVIS_TAG}" != "" ]; then
  if [ "${SANDBOX}" == "true" ]; then
    read -rp " Do you want to push the resulting images? [y/N] "
    if [[ ${REPLY,,} =~ ^(y|Y|yes)$ ]]; then
      export VERSION_PUSH="true"
    else
      export VERSION_PUSH="false"
    fi
    echo ""
    sleep 1
  else
    export VERSION_PUSH="true"
  fi
  export VERSION_MAJOR="$(call semver get major ${TRAVIS_TAG})"
  export VERSION_MINOR="${VERSION_MAJOR}.$(call semver get minor ${TRAVIS_TAG})"
  export VERSION_PATCH="${VERSION_MINOR}.$(call semver get patch ${TRAVIS_TAG})"
  export VERSION_PRE="${VERSION_PATCH}-$(call semver get prerel ${TRAVIS_TAG})"
  if [ "${VERSION_PRE}" == "${VERSION_PATCH}-" ]; then
    echo "> Pushing version ${VERSION_MAJOR}, ${VERSION_MINOR} and ${VERSION_PATCH} (release)"
  else
    echo "> Pushing version ${VERSION_PRE} (prerelease)"
  fi
else
  echo "> Not a release. Pushes are going to be skipped."
fi

for KIND in ./images/core/*
do
  KIND=$(basename ${KIND})
  echo ""
  echo "> Building [${KIND}] core image..."
  if [ "${VERSION_PRE}" == "${VERSION_PATCH}-" ]; then
    call tusk core --kind ${KIND} --version ${VERSION_PATCH}
    docker tag directus/core:${KIND}-${VERSION_PATCH} directus/core:${KIND}-${VERSION_MINOR}
    docker tag directus/core:${KIND}-${VERSION_PATCH} directus/core:${KIND}-${VERSION_MAJOR}
    #docker tag directus/core:${KIND}-${VERSION_PATCH} directus/core:${KIND}-latest
    if [ "${VERSION_PUSH}" == "true" ]; then
      docker push directus/core:${KIND}-${VERSION_PATCH}
      docker push directus/core:${KIND}-${VERSION_MINOR}
      docker push directus/core:${KIND}-${VERSION_MAJOR}
      #docker push directus/core:${KIND}-latest
    fi
  else
    call tusk core --kind ${KIND} --version ${VERSION_PRE}
    if [ "${VERSION_PUSH}" == "true" ]; then
      docker push directus/core:${KIND}-${VERSION_PRE}
    fi
  fi
done

for PROJECT in ./images/base/*
do
  for KIND in "${PROJECT}/*"
  do
    KIND=$(basename ${KIND})
    PROJECT=$(basename ${PROJECT})
    echo ""
    echo "> Building [${KIND}] base image for project [${PROJECT}]..."

    if [ "${VERSION_PRE}" == "${VERSION_PATCH}-" ]; then
      call tusk base --kind ${KIND} --version ${VERSION_PATCH} --project ${PROJECT}
      docker tag directus/${PROJECT}:base-${KIND}-${VERSION_PATCH} directus/${PROJECT}:base-${KIND}-${VERSION_MINOR}
      docker tag directus/${PROJECT}:base-${KIND}-${VERSION_PATCH} directus/${PROJECT}:base-${KIND}-${VERSION_MAJOR}
      #docker tag directus/${PROJECT}:base-${KIND}-${VERSION_PATCH} directus/${PROJECT}:base-${KIND}-latest
      if [ "${VERSION_PUSH}" == "true" ]; then
        docker push directus/${PROJECT}:base-${KIND}-${VERSION_PATCH}
        docker push directus/${PROJECT}:base-${KIND}-${VERSION_MINOR}
        docker push directus/${PROJECT}:base-${KIND}-${VERSION_MAJOR}
        #docker push directus/${PROJECT}:base-${KIND}-latest
      fi
    else
      call tusk base --kind ${KIND} --version ${VERSION_PRE} --project ${PROJECT}
      if [ "${VERSION_PUSH}" == "true" ]; then
        docker push directus/${PROJECT}:base-${KIND}-${VERSION_PRE}
      fi
    fi
  done
done

echo ""
echo "Output images"
echo ""
docker images --format "{{.Repository}}:{{.Tag}}" | grep directus | sort
echo ""
